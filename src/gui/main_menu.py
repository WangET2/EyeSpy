# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main_menu.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(400, 200)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMouseTracking(False)
        MainWindow.setToolTip("")
        MainWindow.setAutoFillBackground(False)
        MainWindow.setDocumentMode(False)
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.selection_tab = QtWidgets.QTabWidget(self.centralwidget)
        self.selection_tab.setObjectName("selection_tab")
        self.processing_tab = QtWidgets.QWidget()
        self.processing_tab.setObjectName("processing_tab")
        self.gridLayout = QtWidgets.QGridLayout(self.processing_tab)
        self.gridLayout.setObjectName("gridLayout")
        self.batch_process_button = QtWidgets.QPushButton(self.processing_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.batch_process_button.sizePolicy().hasHeightForWidth())
        self.batch_process_button.setSizePolicy(sizePolicy)
        self.batch_process_button.setToolTip("Process all images in a directory.")
        self.batch_process_button.setWhatsThis("")
        self.batch_process_button.setObjectName("batch_process_button")
        self.gridLayout.addWidget(self.batch_process_button, 1, 0, 1, 1)
        self.live_process_button = QtWidgets.QPushButton(self.processing_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.live_process_button.sizePolicy().hasHeightForWidth())
        self.live_process_button.setSizePolicy(sizePolicy)
        self.live_process_button.setToolTip("Process images in a directory as they are created")
        self.live_process_button.setObjectName("live_process_button")
        self.gridLayout.addWidget(self.live_process_button, 0, 0, 1, 1)
        self.selection_tab.addTab(self.processing_tab, "")
        self.bayesian_tab = QtWidgets.QWidget()
        self.bayesian_tab.setObjectName("bayesian_tab")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.bayesian_tab)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.training_button = QtWidgets.QPushButton(self.bayesian_tab)
        self.training_button.setObjectName("training_button")
        self.gridLayout_3.addWidget(self.training_button, 0, 0, 1, 1)
        self.testing_button = QtWidgets.QPushButton(self.bayesian_tab)
        self.testing_button.setObjectName("testing_button")
        self.gridLayout_3.addWidget(self.testing_button, 1, 0, 1, 1)
        self.selection_tab.addTab(self.bayesian_tab, "")
        self.gridLayout_2.addWidget(self.selection_tab, 0, 0, 1, 1)
        self.config_button = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.config_button.sizePolicy().hasHeightForWidth())
        self.config_button.setSizePolicy(sizePolicy)
        self.config_button.setToolTip("")
        self.config_button.setObjectName("config_button")
        self.gridLayout_2.addWidget(self.config_button, 1, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.selection_tab.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.batch_process_button.setText(_translate("MainWindow", "Batch Process"))
        self.live_process_button.setText(_translate("MainWindow", "Live Process"))
        self.selection_tab.setTabText(self.selection_tab.indexOf(self.processing_tab), _translate("MainWindow", "Processing"))
        self.training_button.setText(_translate("MainWindow", "Training"))
        self.testing_button.setText(_translate("MainWindow", "Testing"))
        self.selection_tab.setTabText(self.selection_tab.indexOf(self.bayesian_tab), _translate("MainWindow", "Bayesian"))
        self.config_button.setText(_translate("MainWindow", "Settings"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
